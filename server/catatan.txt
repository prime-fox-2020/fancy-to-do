import { defaultValueSchemable } from "sequelize/types/lib/utils"

oauth
=> standarisasi pabrik untuk proses delegasi atau authorisasi
kenapa ada oauth? karena sbg aturan untuk authorisasi

fungsi oauth?
misal updaet status di fb tapi masuk juga ke twitter / ig
untuk ngeblash tersebut butuh authoorisasi

implementasi : ketika regis/login -> bisa login lewat fb atau git

oauth basic komponen : ?????

gugle kasih data ke web 

1. api key / token 
=> identifir apk
2. acces token => user identifier
3. scope => untuk ngeblash ke apk lain, hampir sama dengn authorisasi. butuh permision untuk masukk

metode :
1. oatuh 1 => 
2. oatuh 2 => lebih simpe dianding yang pertama

yang dibutuhkan buat oatuh
1. signin => setelahnya bisa lihat profil, defaultValueSchemable
terus bisa pake api yang lain

step :
1. sign in
2. configurasi projek
3. select atau create project
4. authorisasi masih localhost => ada client id yang akan disematkan di html
5. dwonload client configurasi
6. buat html => taro scriptnya di Headers
7. kalau udah dapat id, kirim ke server
8. kirim idToken hasi res dr google

pemasangan ajax di index, method postMessage, url(user-google-signinn), data(idtoken)


<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta 
            name="viewport"
            content="width=device-width, initial-scale=1, shrink-to-fit=no"
        />

        <title>Fancy-Todos</title>
    </head>
    <body>
        <h1 id="greetings">Fancy-Todos</h1>
        <script 
            src="https://code.jquery.com/jquery-3.5.0.min.js" 
            integrity="sha256-xNzN2a4ltkB44Mc/Jz3pT4iU1cmeR0FkXs4pru/JxaQ=" 
            crossorigin="anonymous"
        ></script>
        <script src="./index.js"></script>
    </body>
</html>

1.content ke google dan daftarkan api
2. dapatkan client id, dsb
3. sematkan script dan clientId di projek
4. proses setlah login menghasilkan basicprofile dn id_token
5. kalau udah ada id_token, lakukan penukara acces_token terhadp backend/server untuk menentukan 


server
1. dapatkan id dr client2. verifi token dengan client_id
2. verify token berserta clien_id
3. kalau berhasil, akan mendapatkan payload (ada info dr user)
4. usernya di cek apakah sudah terintegrasi di server yang dibutuhkan
5. kalau belum, create user return access_tokn
6. kalau sudah tinggal return access_token

